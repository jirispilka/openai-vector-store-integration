# generated by datamodel-codegen:
#   filename:  input_schema.json
#   timestamp: 2024-07-01T09:35:47+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class OpenaiVectorStoreIntegration(BaseModel):
    vectorStoreId: str = Field(
        ...,
        description='Vector Store ID where the data will be stored',
        title='Vector Store ID',
    )
    openaiApiKey: str = Field(..., description='OpenAI API KEY', title='OpenAI API KEY')
    assistantId: Optional[str] = Field(
        None,
        description='The ID of an OpenAI Assistant. This parameter is required only when a file exceeds the OpenAI size limit of 5,000,000 tokens (as of 2024-04-23).\n\n When necessary, the model associated with the assistant is utilized to count tokens and split the large file into smaller, manageable segments.',
        title='Assistant ID',
    )
    datasetFields: List = Field(
        ...,
        description='A list of dataset fields which should be selected from the items, only these dataset fields will remain in the resulting record objects.\n\n For example, when using the website content crawler, you might select dataset fields such as `text` and `url`, and `metadata.title` among others, to be included in the vector store file.',
        title='A list of dataset fields which should be selected from the dataset',
    )
    filePrefix: Optional[str] = Field(
        None,
        description="Using a file prefix helps with the management of vector store file updates by eliminating the need to track each file's ID. For instance, if you set the filePrefix to 'apify-advisor', the Actor will initially locate all files in the vector store with this prefix. Subsequently, it will delete these files and create new ones, also prefixed accordingly.",
        min_length=5,
        title='Delete/Create vector store files with a prefix',
    )
    fileIdsToDelete: Optional[List] = Field(
        None,
        description='Delete specified file ids associated with vector store. This can be useful when one needs to delete files that are no longer needed.',
        title='Array of vector store file ids to delete',
    )
    saveCrawledFiles: Optional[bool] = Field(
        True,
        description="Save files from Apify's key-value store to OpenAI's file store. Useful when utilizing Apifyâ€™s website content crawler with the 'saveFiles' option, allowing the found files to be directly store and used in the assistant.",
        title='Save crawled files (docs, pdf, pptx) to OpenAI File Store',
    )
    datasetId: Optional[str] = Field(
        None,
        description='The Dataset ID is provided automatically when the actor is set up as an integration. You can fill it in explicitly here to enable debugging of the actor',
        title="Apify's Dataset ID",
    )
    keyValueStoreId: Optional[str] = Field(
        None,
        description='This is the ID for the Key-value store on Apify, which serves as the data source for json, pdf, and pptx files. This ID is automatically provided when the actor is integrated. However, you can manually enter the ID here for debugging purposes.',
        title="Apify's Key-value store ID (source for json, pdf, pptx files) ",
    )
    saveInApifyKeyValueStore: Optional[bool] = Field(
        False,
        description="Save all created files in the Apify's Key-Value Store to easily check and retrieve all files (this is typically used when debugging)",
        title="Save all created files in the Apify's key-value store",
    )
